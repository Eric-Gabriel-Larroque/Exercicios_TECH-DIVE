[main]
# Aqui instanciamos um novo objeto do tipo ShiroRealm (que criamos manualmente) e damos o nome de "myRealm"
# para caso quisermos adicionar mais alguma configuração aqui no arquivo shiro.ini.
# Esse é o realm responsável por gerenciar toda a segurança do nosso sistema.
myRealm=projeto.security.ShiroRealm

# Aqui instanciamos um filtro de autenticação que redireciona o usuário para a página de login
# caso esteja tentando acessar alguma página protegida. Da mesma forma, o sistema deixa o usuário passar direto pela
# página de login caso o mesmo já esteja autenticado.
authc = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter

# Aqui definimos qual será a página de login do "authc" criado na linha acima. Caso aconteça de o usuário precisar
# ser redirecionado para a página de login, é essa a URL que o realm irá chamar.
authc.loginUrl = /login.xhtml

# Aqui é a página que o sistema redirecionará o usuário quando o mesmo fizer login.
authc.successUrl = /index.xhtml

[urls]
# Aqui definimos que todos os requests para "/javax.faces.resource/**" (** significa que qualquer coisa
# que vier após isso será considerado) será permitido caso o usuário seja pelo menos um usuário anônimo (que ainda não fez login).
/javax.faces.resource/** = anon

# Aqui definimos que a página de erro será acessível também para usuários anônimos.
/500.xhtml = anon

# Aqui dizemos que a URL de login só pode ser acessada por quem está autenticado. Isso porque quem vai gerenciar o login
# é o "authc" que definimos acima. Ou seja: a pessoa acessa /login.xhtml, o "auth" veja se ela está autenticada e decide
# se ela fica na URL ou não.
/login.xhtml = authc

# Aqui definimos que a URL de logout (que existe por baixo dos panos) é gerenciada pela parte de logout do Shiro.
/logout = logout

# Aqui definimos que todas as outras URLs que não foram especificadas acima serão acessíveis somente por pessoas autenticadas.
/** = authc